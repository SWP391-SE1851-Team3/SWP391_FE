import React, { useState, useEffect } from 'react';
import './ParentVaccineConfirmation.css';
import { useVaccination } from '../../../context/VaccinationContext';

const ParentVaccineConfirmation = () => {
  const [selectedStudent, setSelectedStudent] = useState(null);
  const [consent, setConsent] = useState('');
  const [reason, setReason] = useState('');
  const { incrementVaccinationCount, decrementVaccinationCount } = useVaccination();

  // D·ªØ li·ªáu m·∫´u cho danh s√°ch h·ªçc sinh
  const [students] = useState([
    {
      id: 1,
      name: 'Nguy·ªÖn VƒÉn A',
      class: '5A',
      pendingVaccinations: 2,
      vaccineHistory: [
        {
          id: 1,
          date: '15/06/2024',
          vaccine: 'Vi√™m gan B',
          location: 'Tr·∫°m y t·∫ø ph∆∞·ªùng',
          result: 'Kh√¥ng c√≥ ph·∫£n ·ª©ng ph·ª•',
        },
        {
          id: 2,
          date: '10/01/2023',
          vaccine: 'C√∫m m√πa',
          location: 'B·ªánh vi·ªán Nhi',
          result: 'S·ªët nh·∫π sau ti√™m',
        },
      ]
    },
    {
      id: 2,
      name: 'Nguy·ªÖn Th·ªã B',
      class: '3B',
      pendingVaccinations: 1,
      vaccineHistory: [
        {
          id: 1,
          date: '20/05/2024',
          vaccine: 'Vi√™m n√£o Nh·∫≠t B·∫£n',
          location: 'B·ªánh vi·ªán Nhi',
          result: 'Kh√¥ng c√≥ ph·∫£n ·ª©ng ph·ª•',
        }
      ]
    }
  ]);

  useEffect(() => {
    incrementVaccinationCount();
    return () => {
      decrementVaccinationCount();
    };
  }, []);

  const handleSubmit = (e) => {
    e.preventDefault();
    if (consent === '') {
      alert('Vui l√≤ng ch·ªçn ƒê·ªìng √Ω ho·∫∑c Kh√¥ng ƒë·ªìng √Ω');
      return;
    }

    const confirmationData = {
      studentId: selectedStudent.id,
      studentName: selectedStudent.name,
      vaccine: 'V·∫Øc xin S·ªüi - Quai b·ªã - Rubella (MMR)',
      injectionDate: '2025-06-15',
      consent,
      reason: consent === 'no' ? reason : '',
    };

    console.log('üì§ D·ªØ li·ªáu g·ª≠i:', confirmationData);
    alert('G·ª≠i x√°c nh·∫≠n th√†nh c√¥ng!');
    setSelectedStudent(null);
    setConsent('');
    setReason('');
  };

  const handleViewDetails = (student) => {
    setSelectedStudent(student);
  };

  const handleViewHistory = (student) => {
    setSelectedStudent(student);
    // C√≥ th·ªÉ th√™m logic ƒë·ªÉ hi·ªÉn th·ªã l·ªãch s·ª≠ ti√™m ch·ªßng ·ªü ƒë√¢y
  };

  return (
    <div className="vaccine-record-container">
      {selectedStudent && (
        <button 
          className="back-btn"
          onClick={() => setSelectedStudent(null)}
        >
          Quay l·∫°i
        </button>
      )}
      <h2>X√°c nh·∫≠n ti√™m v·∫Øc xin cho h·ªçc sinh</h2>
      
      {!selectedStudent ? (
        <div className="students-list">
          {students.map((student) => (
            <div key={student.id} className="student-card">
              <div className="student-avatar">
                {student.name.charAt(0)}
              </div>
              <div className="student-content">
                <h3>
                  {student.name}
                  {student.pendingVaccinations > 0 && (
                    <span className="notification-dot" title={`${student.pendingVaccinations} th√¥ng b√°o m·ªõi`}></span>
                  )}
                </h3>
                <div className="student-info">
                  <p><strong>L·ªõp:</strong> {student.class}</p>
                </div>
                <div className="action-buttons">
                  <button 
                    className="view-btn"
                    onClick={() => handleViewDetails(student)}
                  >
                    Xem Th√¥ng Tin
                  </button>
                </div>
              </div>
            </div>
          ))}
        </div>
      ) : (
        <>
          <div className="student-info">
            <p><strong>H·ªç t√™n:</strong> {selectedStudent.name}</p>
            <p><strong>L·ªõp:</strong> {selectedStudent.class}</p>
            <p><strong>V·∫Øc xin:</strong> S·ªüi - Quai b·ªã - Rubella (MMR)</p>
            <p><strong>Lo·∫°i Vacxin:</strong> Olala - Ph√°p</p>
            <p><strong>ƒê·ªãa ƒëi·ªÉm:</strong> T·∫°i tr∆∞·ªùng</p>
            <p><strong>Ng√†y ti√™m d·ª± ki·∫øn:</strong> 15/06/2025</p>
          </div>

          <form onSubmit={handleSubmit} className="consent-form">
            <label>B·∫°n c√≥ ƒë·ªìng √Ω cho con ti√™m v·∫Øc xin n√†y kh√¥ng?</label>
            <div className="radio-group">
              <label>
                <input
                  type="radio"
                  value="yes"
                  checked={consent === 'yes'}
                  onChange={() => setConsent('yes')}
                />
                ƒê·ªìng √Ω
              </label>
              <label>
                <input
                  type="radio"
                  value="no"
                  checked={consent === 'no'}
                  onChange={() => setConsent('no')}
                />
                Kh√¥ng ƒë·ªìng √Ω
              </label>
            </div>

            {consent === 'no' && (
              <div className="reason-field">
                <label>L√Ω do t·ª´ ch·ªëi (b·∫Øt bu·ªôc):</label>
                <textarea
                  value={reason}
                  onChange={(e) => setReason(e.target.value)}
                  required
                  placeholder="Nh·∫≠p l√Ω do t·∫°i ƒë√¢y..."
                />
              </div>
            )}

            <button type="submit" className="submit-btn">G·ª≠i x√°c nh·∫≠n</button>
          </form>

          <div className="history-section">
            <h3>L·ªãch s·ª≠ ti√™m ch·ªßng</h3>
            {selectedStudent.vaccineHistory.length > 0 ? (
              <ul>
                {selectedStudent.vaccineHistory.map((item) => (
                  <li key={item.id} className="history-item">
                    <p><strong>Ng√†y ti√™m:</strong> {item.date}</p>
                    <p><strong>V·∫Øc xin:</strong> {item.vaccine}</p>
                    <p><strong>ƒê·ªãa ƒëi·ªÉm:</strong> {item.location}</p>
                    <p><strong>K·∫øt qu·∫£:</strong> {item.result}</p>
                  </li>
                ))}
              </ul>
            ) : (
              <p>Ch∆∞a c√≥ l·ªãch s·ª≠ ti√™m ch·ªßng.</p>
            )}
          </div>
        </>
      )}
    </div>
  );
};

export default ParentVaccineConfirmation;
